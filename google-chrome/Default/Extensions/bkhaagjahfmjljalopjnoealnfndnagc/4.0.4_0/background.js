const requestPermissionAsync=promisify(chrome.permissions.request),removePermissionAsync=promisify(chrome.permissions.remove),containsPermissionAsync=promisify(chrome.permissions.contains),createMenuAsync=promisify(chrome.contextMenus.create),removeMenuAsync=promisify(chrome.contextMenus.remove),PRO_ACTIVATE_ENTERPRISE_MESSAGE="octotree_pro_activate_enterprise_call",PRO_DEACTIVATE_ENTERPRISE_MESSAGE="octotree_pro_deactivate_enterprise_call";let isCreated=!1,injectionHookRegistered=!1;function removeMenu(){const{name:e}=chrome.runtime.getManifest();removeMenuAsync(`${e}:add-permission`),removeMenuAsync(`${e}:remove-permission`)}function createMenu(){const{name:e}=chrome.runtime.getManifest();createMenuAsync({id:`${e}:add-permission`,title:`Enable ${e} on this domain`,contexts:["page_action","browser_action"],documentUrlPatterns:["http://*/*","https://*/*"],onclick:async(e,t)=>{let{tabId:o,id:r,url:i}=t;o||(o=r);const n=`${new URL(i).origin}/*`;if(await requestPermissionAsync({permissions:["webNavigation","tabs"],origins:[n]})){registerInjectionHook(),promisify(chrome.tabs.reload)(o)}}}),createMenuAsync({id:`${e}:remove-permission`,title:`Disable ${e} on this domain`,contexts:["page_action","browser_action"],documentUrlPatterns:["http://*/*","https://*/*"],onclick:async(e,t)=>{let{tabId:o,id:r,url:i}=t;o||(o=r);const n=`${new URL(i).origin}/*`;if(!isGitHub(n)&&await containsPermissionAsync({origins:[n]})){if(await removePermissionAsync({origins:[n]})){promisify(chrome.tabs.reload)(o)}}}})}function registerInjectionHook(){!injectionHookRegistered&&chrome.webNavigation&&(injectionHookRegistered=!0,chrome.webNavigation.onCommitted.addListener(async({tabId:e,frameId:t})=>{const o=promisify(chrome.tabs.get),r=promisify(chrome.tabs.executeScript),i=promisify(chrome.tabs.insertCSS);if(0!==t)return;let{url:n}=await o(e);if(!n)try{if(!(n=(await r(e,{code:"window.location.href;",runAt:"document_start"}))[0]))return}catch(e){return}const s=`${new URL(n).origin}/*`;if(isGitHub(s)||isOctotreeWeb(s))return;if(!s.toLowerCase().startsWith("http"))return;if(!await containsPermissionAsync({origins:[s]}))return;const a=chrome.runtime.getManifest().content_scripts;for(const t of a){const{all_frame:o,run_at:n,css:s,js:a}=t;s.forEach(t=>i(e,{file:t,allFrames:o,runAt:n})),a.forEach(t=>r(e,{file:t,allFrames:o,runAt:n}))}}))}function promisify(e){return(...t)=>new Promise((o,r)=>{const i=e=>{chrome.runtime.lastError?r(chrome.runtime.lastError):o(e)},n=e(...t,i);n&&n.then&&n.then(i)})}function isGitHub(e){return"https://github.com/*"===e}function isOctotreeWeb(e){return"https://www.octotree.io/*"===e}chrome.runtime.onMessage.addListener(e=>{e.eventName!==PRO_ACTIVATE_ENTERPRISE_MESSAGE||isCreated?e.eventName===PRO_DEACTIVATE_ENTERPRISE_MESSAGE&&isCreated&&(removeMenu(),isCreated=!1):(createMenu(),isCreated=!0)}),registerInjectionHook();const apiBaseUrl="https://www.octotree.io/api/v1.0",PRO_WEBSITE_MESSAGE_NAME="octotree_pro_auth_call";async function sendRequest(e,t){try{const{path:o,token:r,body:i,method:n}=t,s={"Content-Type":"application/json"};r&&(s.Authorization=`Bearer ${r}`);const a=await fetch(`${apiBaseUrl}/${o.replace(/^\//,"")}`,{headers:s,body:i,method:n}),c=a.headers.get("Content-Type");let m;if(m=/application\/json/i.test(c)?await a.json():await a.text(),!a.ok)throw new Error(m.message||m.statusText||m);e({responseBody:m,responseStatus:a.status})}catch(t){e({responseErrorText:t.message})}}chrome.runtime.onMessage.addListener((e,t,o)=>{if("octotree_pro_auth_call"===e.eventName)return sendRequest(o,e),!0;o()}),chrome.runtime.setUninstallURL("https://www.octotree.io/feedback");